<?xml version="1.0" encoding="UTF-8"?>
<beans:beans 
       xmlns="http://www.springframework.org/schema/mvc"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/mvc 
                      http://www.springframework.org/schema/mvc/spring-mvc.xsd
                      http://www.springframework.org/schema/beans 
                      http://www.springframework.org/schema/beans/spring-beans.xsd
                      http://www.springframework.org/schema/context
                      http://www.springframework.org/schema/context/spring-context.xsd">
                      


  <annotation-driven />
  
  <!-- Scan 할 Bean 들이 모여있는 package 를 지정함 -->
  <context:component-scan base-package="com.tjoeun.spring.controller" />
  <context:component-scan base-package="com.tjoeun.spring.dao" />
  <context:component-scan base-package="com.tjoeun.spring.service" />
  
  <!-- Controller 에서 return하는 문자열(경로)에 접두사, 접미사 설정하기 -->
  <!-- ViewResolver : View 해석기 -->
  <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <beans:property name="prefix" value="/WEB-INF/view/" />
    <beans:property name="suffix" value=".jsp" />
  </beans:bean>
  
  
  

 <resources mapping="/**" location="/resources/" />  
  
  
  
  <beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <beans:property name="locations">
      <beans:list>
        <beans:value>/WEB-INF/properties/db.properties</beans:value>
        <beans:value>/WEB-INF/properties/option.properties</beans:value>
      </beans:list>
    </beans:property>
  </beans:bean>
  
  <!-- 데이터베이스 접속 정보 관리 Bean -->
  <beans:bean class="org.apache.commons.dbcp2.BasicDataSource" id="basic_data_source">
    <beans:property name="driverClassName" value="${db.classname}"/>                 
    <beans:property name="url" value="${db.url}"/>                 
    <beans:property name="username" value="${db.username}"/>                 
    <beans:property name="password" value="${db.password}"/>                 
  </beans:bean>
  
  <!-- 쿼리문과 접속정보 관리 Bean -->
  <beans:bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSession">
    <beans:property name="dataSource" ref="basic_data_source" />                
    <beans:property name="mapperLocations" value="/WEB-INF/mapper/*.xml" />                
  </beans:bean>
  
  <!-- 쿼리문 실행 Bean (Mapper 관리) -->
  <beans:bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSessionTemplate">
    <beans:constructor-arg index="0" ref="sqlSession"/>               
  </beans:bean> 
  
  
  
<!-- Interceptor 등록하기 -->
<interceptors>
	<interceptor>
		<mapping path="/**"/>
		<beans:bean class="com.tjoeun.spring.interceptor.TopMenuInterceptor"/>
	</interceptor>  
	
	<interceptor>
		<mapping path="/board/modify" />
		<beans:bean class="com.tjoeun.spring.interceptor.CheckWriterInterceptor"/>
	</interceptor>  

	<interceptor>
		<mapping path="/admin/**" />
		<mapping path="/product/upload" />
		<mapping path="/product/delete" />
		<mapping path="/product/modify" />
		<beans:bean class="com.tjoeun.spring.interceptor.AdminInterceptor"/>
	</interceptor>  
</interceptors>  
  

<!-- Message Source 등록하기 -->
<beans:bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource" id="messageSource" >
    <beans:property name="basenames" >
      <beans:list>
        <beans:value>/WEB-INF/properties/error_message</beans:value>
      </beans:list>
    </beans:property>
</beans:bean> 
  
  <!-- Message 에 접근하기 위한 Accessor 등록하기 -->
  <beans:bean class="org.springframework.context.support.MessageSourceAccessor">
    <beans:constructor-arg ref="messageSource"/>
  
  </beans:bean>
  
  <!-- enctype="multipart/form-data를 설정했을 때 data가 정상적으로 전송되게 함  -->
  <beans:bean class="org.springframework.web.multipart.support.StandardServletMultipartResolver" id="multipartResolver"/>
                 
  
  
  
  
</beans:beans>
